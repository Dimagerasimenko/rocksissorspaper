{"version":3,"file":"main.js","sources":["js/util.js","js/gramar.js","js/game.js","js/formMain.js","js/intro.js","js/main.js"],"sourcesContent":["export const choices = [`r`, `p`, `s`];\r\n\r\nexport const getComputerChoise = () => {\r\n  const randomNumber = Math.floor(Math.random() * 3);\r\n  return choices[randomNumber];\r\n};\r\n\r\nexport const convertWord = (letter) => {\r\n  if (letter === `r`) {\r\n    return `камень`;\r\n  } else if (letter === `p`) {\r\n    return `бумага`;\r\n  } else {\r\n    return `ножницы`;\r\n  }\r\n};\r\n\r\nexport const render = (template) => {\r\n  const wrapper = document.createElement(`div`);\r\n  wrapper.innerHTML = template;\r\n  return wrapper;\r\n};\r\n\r\nconst mainContent = document.querySelector(`#main`);\r\n\r\nexport const changeScreen = (element) => {\r\n  mainContent.innerHTML = ``;\r\n  mainContent.appendChild(element);\r\n};\r\n\r\n\r\n","\r\nexport const resultText = (Score) => {\r\n  let uT = String(Score);\r\n  let val = uT[uT.length-1];\r\n  switch (val) {\r\n    case `1`:\r\n      return `очко`;\r\n      break;\r\n    case `2`:\r\n    case `3`:\r\n    case `4`:\r\n      return `очка`;\r\n      break;\r\n    default:\r\n      return `очков`;\r\n  }\r\n}\r\n","import {getComputerChoise, render, convertWord, changeScreen} from \"./util\";\r\nimport {resultText} from \"./gramar\";\r\n\r\n\r\nconst gameTemplate = render(`\r\n\r\n<div class=\"score-board\">\r\n<div class='help'>Подсказка\r\n<div class=\"helper\"> \r\n    <div class=\"helper-text\">\r\n        <p>Чего хочу?</p>\r\n        <div class=\"help-cross\">X</div>\r\n    </div> \r\n </div>\r\n</div>\r\n<button type=\"button\" class=\"btn-start-timer\">Старт</button>\r\n<div class=\"timer\">\r\n<p class=\"timer-p\"></p>\r\n</div>\r\n    <div id=\"user-label\" class=\"score-board-badge score-board-badge-user\">Пользователь</div>\r\n    <div id=\"computer-label\" class=\"score-board-badge-computer score-board-badge\">Компьютер</div>\r\n    <span id=\"user-score\" class=\"score-board-user\">0</span>:<span id=\"computer-score\" class=\"score-board-computer\">0</span>\r\n  </div>\r\n  <div class=\"result\">\r\n    <div class=\"result-title\">\r\n    <p>Игра пока не началась.</p>\r\n  </div>\r\n  </div>\r\n  <div class=\"choices\">\r\n    <div class=\"choice rock\" id=\"r\" >\r\n    <img src=\"img/rock.svg\" alt=\"rock\" data-target=\"r\">\r\n    </div>\r\n    <div class=\"choice paper\" id=\"p\" >\r\n    <img src=\"img/paper.svg\" alt=\"paper\" data-target=\"p\">\r\n    </div>\r\n    <div class=\"choice scissors\" id=\"s\">\r\n    <img src=\"img/scissors.svg\" alt=\"scissors\"  data-target=\"s\">\r\n    </div>\r\n    </div>    \r\n`);\r\n\r\nlet userScore = 0;\r\nlet computerScore = 0;\r\nlet computerScoreSpan = gameTemplate.querySelector(`.score-board-computer`);\r\nlet userScoreSpan = gameTemplate.querySelector(`.score-board-user`);\r\nlet resultP = gameTemplate.querySelector(`.result-title > p`);\r\nlet helpGameTemp = gameTemplate.querySelector(`.help`);\r\nlet helpDiv = gameTemplate.querySelector(`.helper`);\r\nlet helpCross = gameTemplate.querySelector(`.help-cross`);\r\n\r\nhelpGameTemp.addEventListener(`click`, () => {\r\n  helpDiv.classList.add(`help-show`);\r\n});\r\n\r\nhelpCross.addEventListener(`click`, () => {\r\n  helpDiv.classList.remove(`help-show`);\r\n  alert(`работает`);\r\n\r\n});\r\n\r\nconst win = (userChoice, computerChoice) => {\r\n  const smallUserWord = `Вы`.fontsize(3).sup();\r\n  const smallCompWord = `Компьютер`.fontsize(3).sup();\r\n  const userChoiceDiv = document.getElementById(userChoice);\r\n  userScore++;\r\n  userScoreSpan.innerHTML = userScore;\r\n  computerScoreSpan.innerHTML = computerScore;\r\n  resultP.innerHTML = `${convertWord(userChoice)}${smallUserWord} победили ${convertWord(computerChoice)}${smallCompWord}. Вы победили!`;\r\n  userChoiceDiv.classList.add(`green-glow`);\r\n  setTimeout(() => {\r\n    userChoiceDiv.classList.remove(`green-glow`);\r\n  },\r\n  1000);\r\n};\r\n\r\nconst lose = (userChoice, computerChoice) => {\r\n  const smallUserWord = `Вы`.fontsize(3).sup();\r\n  const smallCompWord = `Компьютер`.fontsize(3).sup();\r\n  const userChoiceDiv = document.getElementById(userChoice);\r\n  computerScore++;\r\n  computerScoreSpan.innerHTML = computerScore;\r\n  resultP.innerHTML = `${convertWord(userChoice)} ${smallUserWord} Проиграли ${convertWord(computerChoice)}${smallCompWord}. Вы проиграли`;\r\n  userChoiceDiv.classList.add(`red-glow`);\r\n  setTimeout(() => {\r\n    userChoiceDiv.classList.remove(`red-glow`);\r\n  },\r\n  1000);\r\n};\r\n\r\nconst draw = (userChoice, computerChoice) => {\r\n  const smallUserWord = `Вы`.fontsize(3).sup();\r\n  const smallCompWord = `Компьютер`.fontsize(3).sup();\r\n  const userChoiceDiv = document.getElementById(userChoice);\r\n  computerScoreSpan.innerHTML = computerScore;\r\n  resultP.innerHTML = `${convertWord(userChoice)} ${smallUserWord} Ничья ${convertWord(computerChoice)} ${smallCompWord}. У вас ничья`;\r\n  userChoiceDiv.classList.add(`gray-glow`);\r\n  setTimeout(() => {\r\n    userChoiceDiv.classList.remove(`gray-glow`);\r\n  },\r\n  1000);\r\n};\r\n\r\nconst game = (userChoice) => {\r\n  const computerChoice = getComputerChoise();\r\n  switch (userChoice + computerChoice) {\r\n    case `rs`:\r\n    case `pr`:\r\n    case `sp`:\r\n      win(userChoice, computerChoice);\r\n      break;\r\n    case `rp`:\r\n    case `ps`:\r\n    case `sr`:\r\n      lose(userChoice, computerChoice);\r\n      break;\r\n    case `rr`:\r\n    case `pp`:\r\n    case `ss`:\r\n      draw(userChoice, computerChoice);\r\n      break;\r\n  }\r\n};\r\n\r\nconst rockDiv = gameTemplate.querySelector(`.rock`);\r\nconst paperDiv = gameTemplate.querySelector(`.paper`);\r\nconst scissorsDiv = gameTemplate.querySelector(`.scissors`);\r\nrockDiv.addEventListener(`click`, () => game(`r`));\r\npaperDiv.addEventListener(`click`, () => game(`p`));\r\nscissorsDiv.addEventListener(`click`, () => game(`s`));\r\n\r\n\r\nlet timerS = gameTemplate.querySelector(`.timer-p`);\r\nlet minute = 10;\r\nconst btnStartGame =gameTemplate.querySelector(`.btn-start-timer`);\r\n\r\nconst resultGameRSP = render(`\r\n    <div class=\"winner\"><span>Победитель  </span><span> : </span><span class=\"winner-span\"></span></div>\r\n  <div class=\"result-field\">\r\n    <div class=\"user-result\"><span>игрок: </span> <p></p></div>\r\n    <div class=\"computer-result\"><span>компьютер: </span><p></p></div> \r\n  </div>\r\n`);\r\nlet resultUser = resultGameRSP.querySelector(`.user-result > p`);\r\nlet timerInerval;\r\nlet resultComputer = resultGameRSP.querySelector(`.computer-result > p`);\r\nlet winner = resultGameRSP.querySelector(`.winner-span`);\r\n\r\nlet timeCounter = () => {\r\n  minute--;\r\n  if (minute < 5){\r\n    timerS.style.color = `red`;\r\n  }\r\n  if (minute >= 0) {\r\n    timerS.innerHTML = minute;\r\n  } else {\r\n    timerS.innerHTML = `Игра закончена`;\r\n    resultUser.innerHTML =`${userScore}. ${resultText(userScore)} `;\r\n    resultComputer.innerHTML = `${computerScore}. ${resultText(computerScore)} `;\r\n    stopInterval();\r\n    if (userScore > computerScore) {\r\n      winner.innerHTML = `Вы победили`;\r\n    } else {\r\n      winner.innerHTML = `Комп`;\r\n    }\r\n    changeScreen(resultGameRSP);\r\n  }\r\n};\r\n\r\n\r\nbtnStartGame.addEventListener(`click`, () => {\r\n  btnStartGame.style.display = `none`;\r\n  timerInerval = setInterval(timeCounter, 1000);\r\n});\r\n\r\n\r\n\r\nfunction stopInterval() {\r\nclearInterval(timerInerval);\r\n};\r\n\r\n\r\n\r\nexport default gameTemplate;\r\n","import {render, changeScreen} from \"./util\";\r\nimport gameTemplate from \"./game\";\r\n\r\nconst formTemplate = render(`\r\n  <h1 class=\"formH\">Укажи свое имя</h1>\r\n<div id=\"wrapper\">\r\n\t<form id=\"signin\" method=\"#\" action=\"#\">\r\n\t\t<input type=\"text\" id=\"user\" name=\"user\" placeholder=\"us\" />\r\n\t\t<button type=\"submit\" class=\"btn-form\" disabled >B</button>\t\t\r\n\t</form>\r\n</div>\r\n`);\r\n\r\nconst inputForm = formTemplate.querySelector(`form > input`);\r\nconst btnForm = formTemplate.querySelector(`.btn-form`);\r\nconst userGameName = gameTemplate.querySelector(`.score-board-badge-user`);\r\n\r\ninputForm.addEventListener(`input`, () => {\r\n  if (inputForm.value.length > 3) {\r\n    btnForm.removeAttribute(`disabled`);\r\n    btnForm.setAttribute(`id`, `color`);\r\n    btnForm.style.backgroundColor = `red`;\r\n    userGameName.innerHTML = inputForm.value;\r\n  }\r\n});\r\n\r\nbtnForm.addEventListener(`click`, () => {\r\n  changeScreen(gameTemplate);\r\n});\r\n\r\nexport default formTemplate;\r\n","import {changeScreen, render} from \"./util\";\r\n\r\nimport formTemplate from \"./formMain\";\r\n\r\n\r\nconst introTemplate = render(\r\n    `<section class=\"intro\">\r\n<div class=\"intro-text\">\r\n  Камень-ножницы-бумага – это древняя игра, возникшая в Китае. Раньше в нее играли военачальники поздней династии Хань, \r\n  а сейчас эта игра любима многими школьниками. С помощью нее можно выиграть спор, провести жеребьевку и просто убить время.\r\n</div>\r\n<div class=\"intro-block\">\r\n  <button type=\"button\" class=\"intro-btn btn btn-out\">Играть</button>\r\n</div>\r\n</section>`\r\n);\r\n\r\nconst greetingButton = introTemplate.querySelector(`.intro-btn`);\r\ngreetingButton.addEventListener(`click`, () => {\r\n  changeScreen(formTemplate);\r\n});\r\n\r\nexport default introTemplate;\r\n","import {changeScreen} from \"./util\";\r\nimport introTemplate from \"./intro\";\r\n\r\n\r\nchangeScreen(introTemplate);\r\n"],"names":["choices","getComputerChoise","randomNumber","Math","floor","random","convertWord","letter","render","template","wrapper","document","createElement","innerHTML","mainContent","querySelector","changeScreen","element","appendChild","resultText","Score","uT","String","val","length","gameTemplate","userScore","computerScore","computerScoreSpan","userScoreSpan","resultP","helpGameTemp","helpDiv","helpCross","addEventListener","classList","add","remove","alert","win","userChoice","computerChoice","smallUserWord","fontsize","sup","smallCompWord","userChoiceDiv","getElementById","setTimeout","lose","draw","game","rockDiv","paperDiv","scissorsDiv","timerS","minute","btnStartGame","resultGameRSP","resultUser","timerInerval","resultComputer","winner","timeCounter","style","color","stopInterval","display","setInterval","clearInterval","formTemplate","inputForm","btnForm","userGameName","value","removeAttribute","setAttribute","backgroundColor","introTemplate","greetingButton"],"mappings":"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"}